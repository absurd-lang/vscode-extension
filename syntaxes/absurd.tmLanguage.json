{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "Absurd",
  "patterns": [
    {
      "include": "#keywords"
    },
    {
      "include": "#strings"
    },
    {
      "include": "#chars"
    },
    {
      "include": "#numbers"
    },
    {
      "include": "#vectors"
    },
    {
      "include": "#tuples"
    },
    {
      "include": "#records"
    }
  ],
  "repository": {
    "keywords": {
      "patterns": [
        {
          "name": "keyword.control.absurd",
          "match": "\\b(sh|let|if|else|elif|return|while|loop|break|match|mod|use|as|from|enum|async|await|type|pub|mut|func|number|string|bool|char|null|void|true|false)\\b"
        }
      ]
    },
    "strings": {
      "name": "string.quoted.double.absurd",
      "begin": "\"",
      "end": "\"",
      "patterns": [
        {
          "name": "constant.character.escape.absurd",
          "match": "\\\\."
        }
      ]
    },
    "chars": {
      "name": "constant.character.absurd",
      "begin": "'",
      "end": "'",
      "patterns": [
        {
          "name": "constant.character.escape.absurd",
          "match": "\\\\."
        }
      ]
    },
    "numbers": {
      "name": "constant.numeric.absurd",
      "match": "\\b\\d+(\\.\\d+)?\\b"
    },
    "vectors": {
      "name": "meta.collection.vector.absurd",
      "begin": "\\[",
      "end": "\\]",
      "patterns": [
        {
          "include": "#numbers"
        },
        {
          "include": "#strings"
        },
        {
          "include": "#chars"
        },
        {
          "name": "constant.language.boolean.absurd",
          "match": "\\b(true|false)\\b"
        }
      ]
    },
    "tuples": {
      "name": "meta.collection.tuple.absurd",
      "begin": "\\(",
      "end": "\\)",
      "patterns": [
        {
          "include": "#numbers"
        },
        {
          "include": "#strings"
        },
        {
          "include": "#chars"
        },
        {
          "name": "constant.language.boolean.absurd",
          "match": "\\b(true|false)\\b"
        }
      ]
    },
    "records": {
      "name": "meta.collection.record.absurd",
      "begin": "\\{",
      "end": "\\}",
      "patterns": [
        {
          "name": "variable.other.key.absurd",
          "match": "\\b[a-zA-Z_][a-zA-Z0-9_]*\\b"
        },
        {
          "name": "punctuation.separator.key-value.absurd",
          "match": ":"
        },
        {
          "include": "#numbers"
        },
        {
          "include": "#strings"
        },
        {
          "include": "#chars"
        },
        {
          "name": "constant.language.boolean.absurd",
          "match": "\\b(true|false)\\b"
        }
      ]
    }
  },
  "scopeName": "source.absurd"
}
